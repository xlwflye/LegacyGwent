@page "/gameresults"
@inject GwentServerService GwentService
@implements IDisposable

<div class="table-responsive">
    <table class="table table-bordered" style="width:590px">
        <tr>
            <td style="width:80px"></td>
            <td style="width:140px">玩家名</td>
            <td style="width:150px">所用领袖</td>
            <td style="width:90px">对局结果</td>
            <td style="width:80px">总比分</td>
        </tr>
@foreach(var result in _resultList.OrderByDescending(x => x.Time).Take(50))
{
        <tr class="table-info">
            <td>先手方:</td>
            @if(result.RedPlayerName.Length>8)
            {
                <td style="font-size:8px">@result.RedPlayerName</td>
            }else
            {
                <td>@result.RedPlayerName</td>
            }    
            <td>@GwentMap.CardMap[result.RedLeaderId].Name</td>
            <td>@(result.RedPlayerGameResultStatus==GameStatus.Draw?"平":(result.RedPlayerGameResultStatus==GameStatus.Win?"胜":"败"))</td>
            <td>@result.RedWinCount</td>
        </tr>
        <tr class="table-danger">
            <td>后手方:</td>
            @if(result.BluePlayerName.Length>8)
            {
                <td style="font-size:8px">@result.BluePlayerName</td>
            }else
            {
                <td>@result.BluePlayerName</td>
            }
            <td>@GwentMap.CardMap[result.BlueLeaderId].Name</td>
            <td>@(result.RedPlayerGameResultStatus==GameStatus.Draw?"平":(result.RedPlayerGameResultStatus==GameStatus.Win?"败":"胜"))</td>
            <td>@result.BlueWinCount</td>
        </tr>
        <tr>
            <td style="padding:3px"></td>
            <td style="padding:3px"></td>
            <td style="padding:3px"></td>
            <td style="padding:3px"></td>
            <td style="padding:3px"></td>
        </tr>
}
    </table>
</div>

@code
{
    private IList<GameResult> _resultList;

    protected override void OnInitialized()
    {
        _resultList = GwentService.ResultList.ToList();
        GwentService.OnGameOver += OnGameOver;
    }

    private void OnGameOver(GameResult newResult)
    {
        InvokeAsync(() => {
            _resultList.Add(newResult);
            StateHasChanged();
        });
    }

    public void Dispose()
    {
        GwentService.OnGameOver -= OnGameOver;
    }
}